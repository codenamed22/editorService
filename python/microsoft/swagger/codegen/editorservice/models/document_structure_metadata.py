# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DocumentStructureMetadata(Model):
    """DocumentStructureMetadata.

    :param paragraph_id: Unique identifier of paragraph within a document.
     NOTE: This is going to be deprecated -> use more generic TileId instead.
    :type paragraph_id: str
    :param paragraph_revision_id: Number that is changed whenever a paragraph
     is changed. NOTE: This is going to be deprecated -> use more generic
     RevisionId instead.
    :type paragraph_revision_id: str
    :param tile_id: Request: Unique identifier of tile within a document.
     Response: Id of the tile the critique belongs to
    :type tile_id: str
    :param revision_id: Request: Number that is changed whenever a tile is
     changed. Response: Revision id of the tile critique belongs to
    :type revision_id: str
    :param request_order_in_session: Number that is monotonically increasing
     in each and every request for the given session and paragraph request.
    :type request_order_in_session: int
    :param are_tilings_complete: Whether Tilings contain all tilings in
     document. Default value: False .
    :type are_tilings_complete: bool
    :param tilings: Dictionary containing arrays of all paragraphs in the
     document in the reading order.
    :type tilings:
     list[~microsoft.swagger.codegen.editorservice.models.Tiling]
    """

    _attribute_map = {
        'paragraph_id': {'key': 'ParagraphId', 'type': 'str'},
        'paragraph_revision_id': {'key': 'ParagraphRevisionId', 'type': 'str'},
        'tile_id': {'key': 'TileId', 'type': 'str'},
        'revision_id': {'key': 'RevisionId', 'type': 'str'},
        'request_order_in_session': {'key': 'RequestOrderInSession', 'type': 'int'},
        'are_tilings_complete': {'key': 'AreTilingsComplete', 'type': 'bool'},
        'tilings': {'key': 'Tilings', 'type': '[Tiling]'},
    }

    def __init__(self, paragraph_id=None, paragraph_revision_id=None, tile_id=None, revision_id=None, request_order_in_session=None, are_tilings_complete=False, tilings=None):
        super(DocumentStructureMetadata, self).__init__()
        self.paragraph_id = paragraph_id
        self.paragraph_revision_id = paragraph_revision_id
        self.tile_id = tile_id
        self.revision_id = revision_id
        self.request_order_in_session = request_order_in_session
        self.are_tilings_complete = are_tilings_complete
        self.tilings = tilings
