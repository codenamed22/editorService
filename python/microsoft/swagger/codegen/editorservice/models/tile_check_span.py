# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .common_language_id_property import CommonLanguageIdProperty


class TileCheckSpan(CommonLanguageIdProperty):
    """Overrides range in the tile element that define the language override,
    DoNotCheck boolean or other additional info.

    :param language_id: Editing language identifier with variants (e.g. en-us,
     en-gb, de-de-1996), see
     http://www.i18nguy.com/unicode/language-identifiers.html
    :type language_id: str
    :param start: The start index of the text span. Default value: 0 .
    :type start: int
    :param length: The length of the text span. Default value:
     tileElement.Text.Length - span.Start .
    :type length: int
    :param do_not_check: True if this span will not be checked for any
     critiques
    :type do_not_check: bool
    :param analyzer_data: Dictionary that contains additional metadata about a
     span.
    :type analyzer_data: object
    """

    _attribute_map = {
        'language_id': {'key': 'LanguageId', 'type': 'str'},
        'start': {'key': 'Start', 'type': 'int'},
        'length': {'key': 'Length', 'type': 'int'},
        'do_not_check': {'key': 'DoNotCheck', 'type': 'bool'},
        'analyzer_data': {'key': 'AnalyzerData', 'type': 'object'},
    }

    # def __init__(self, language_id=None, start=0, length=tileElement.Text.Length - span.Start, do_not_check=None, analyzer_data=None):
    #     super(TileCheckSpan, self).__init__(language_id=language_id)
    #     self.start = start
    #     self.length = length
    #     self.do_not_check = do_not_check
    #     self.analyzer_data = analyzer_data

    def __init__(self, language_id=None, start=0, length=0, do_not_check=None,
                 analyzer_data=None):
        super(TileCheckSpan, self).__init__(language_id=language_id)
        self.start = start
        self.length = length
        self.do_not_check = do_not_check
        self.analyzer_data = analyzer_data
